<?php	class Data	{		public static $get_id_method_prefixe = 'get_id_';		public static $set_method_prefixe = 'set_';		public static $add_method_prefixe = 'add_';				public static function link_one_any(&$left_items, &$right_items)		{			self::link_Any_One($right_items, $left_items);		}				public static function link_any_one(&$left_items, &$right_items, $right_suffixe="")		{			/**			 * Linking : Left Items 0..* <-- to --> 1 Right Item			 */			foreach($left_items as $left_item)			{				$left_item_classname = get_class($left_item);				$right_items_array = array_values($right_items);				$first_right_item = array_shift($right_items_array);				$right_item_classname = get_class($first_right_item);				$right_get_id_methodname=self::$get_id_method_prefixe.strtolower($right_item_classname).$right_suffixe;								if(method_exists($left_item,$right_get_id_methodname))				{					$right_id_value = $left_item->$right_get_id_methodname();					if(! is_null($right_id_value))					{						$right_item = $right_items[$right_id_value];												/**						 * Linking : Left Items -> 1 Right Item						 */						$right_set_methodname = self::$set_method_prefixe.strtolower($right_item_classname).$right_suffixe;						if(method_exists($left_item,$right_set_methodname))						{							$left_item->$right_set_methodname($right_item);						}						else						{							$msg="Error : Unknown `".$left_item_classname."->".$right_set_methodname."` method.";							Viewer::error_msg($msg);						}												/**						 * Linking : Right Item -> 0..* Left Items						 */						$left_add_methodname=self::$add_method_prefixe.strtolower($left_item_classname);						if(method_exists($right_item,$left_add_methodname))						{							$right_item->$left_add_methodname($left_item);						}						else						{							$msg="Error : Unknown `".$right_item_classname."->".$left_add_methodname."` method.";							Viewer::error_msg($msg);						}					}				}				else				{					$msg="Error : Unknown `".$left_item_classname."->".$right_get_id_methodname."` method.";					Viewer::error_msg($msg);				}			}		}				public static function link_any_to_one(&$left_items, &$right_items, $right_suffixe="")		{			/**			 * Linking : Left Items 0..* -- to --> 1 Right Item			 */			foreach($left_items as $left_item)			{				$left_item_classname = get_class($left_item);				$right_items_array = array_values($right_items);				$first_right_item = array_shift($right_items_array);				$right_item_classname = get_class($first_right_item);				$right_get_id_methodname=self::$get_id_method_prefixe.strtolower($right_item_classname).$right_suffixe;								if(method_exists($left_item,$right_get_id_methodname))				{					$right_id_value = $left_item->$right_get_id_methodname();					if(! is_null($right_id_value))					{						$right_item = $right_items[$right_id_value];												/**						 * Linking : Left Items -> 1 Right Item						 */						$right_set_methodname = self::$set_method_prefixe.strtolower($right_item_classname).$right_suffixe;						if(method_exists($left_item,$right_set_methodname))						{							$left_item->$right_set_methodname($right_item);						}						else						{							$msg="Error : Unknown `".$left_item_classname."->".$right_set_methodname."` method.";							Viewer::error_msg($msg);						}					}				}				else				{					$msg="Error : Unknown `".$left_item_classname."->".$right_get_id_methodname."` method.";					Viewer::error_msg($msg);				}			}		}				public static function link_one_to_any(&$left_items, &$right_items, $left_suffixe="", $right_suffixe="")		{			/**			 * Linking : Left Item 1 -- to --> 0..* Right Items			 */			foreach($right_items as $right_item)			{				$right_item_classname = get_class($right_item);				$left_items_array = array_values($left_items);				$first_left_item = array_shift($left_items_array);				$left_item_classname = get_class($first_left_item);				$left_get_id_methodname=self::$get_id_method_prefixe.strtolower($left_item_classname).$left_suffixe;								if(method_exists($right_item,$left_get_id_methodname))				{					$left_id_value = $right_item->$left_get_id_methodname();					if(! is_null($left_id_value))					{						$left_item = $left_items[$left_id_value];												/**						 * Linking : Left Item -> 0..* Right Items						 */						$right_add_methodname=self::$add_method_prefixe.strtolower($right_item_classname).$right_suffixe;						if(method_exists($left_item,$right_add_methodname))						{							$left_item->$right_add_methodname($right_item);						}						else						{							$msg="Error : Unknown `".$left_item_classname."->".$right_add_methodname."` method.";							Viewer::error_msg($msg);						}					}				}				else				{					$msg="Error : Unknown `".$right_item_classname."->".$left_get_id_methodname."` method.";					Viewer::error_msg($msg);				}			}		}				public static function link_any_any(&$left_items, &$middle_items, &$right_items, $left_suffixe="", $right_suffixe="")		{			/**			 * Linking : Left 0..* <-- Middle --> 0..* Right			 */			 			foreach($middle_items as $middle_item)			{				$middle_item_classname = get_class($middle_item);				$left_items_array = array_values($left_items);				$first_left_item = array_shift($left_items_array);				$left_item_classname = get_class($first_left_item);				$right_items_array = array_values($right_items);				$first_right_item = array_shift($right_items_array);				$right_item_classname = get_class($first_right_item);								// $get_id_method_prefixe = 'get_id_';								$left_get_id_methodname=self::$get_id_method_prefixe.strtolower($left_item_classname);				$right_get_id_methodname=self::$get_id_method_prefixe.strtolower($right_item_classname);								if(method_exists($middle_item,$left_get_id_methodname))				{					$left_id_value = $middle_item->$left_get_id_methodname();					if(! is_null($left_id_value))					{						if(method_exists($middle_item,$right_get_id_methodname))						{							$right_id_value = $middle_item->$right_get_id_methodname();							if(! is_null($right_id_value))							{								$left_item = $left_items[$left_id_value];								$right_item = $right_items[$right_id_value];																/**								 * Linking : Middle -> 1 Left								 */								// $set_method_prefixe = 'set_';								$left_set_methodname=self::$set_method_prefixe.strtolower($left_item_classname);								if(method_exists($middle_item,$left_set_methodname))								{									$middle_item->$left_set_methodname($left_item);								}								else								{									$msg="Error : Unknown `".$middle_item_classname."->".$left_set_methodname."` method.";									Viewer::error_msg($msg);								}																/**								 * Linking : Middle -> 1 Right								 */								$right_set_methodname=self::$set_method_prefixe.strtolower($right_item_classname);								if(method_exists($middle_item,$right_set_methodname))								{									$middle_item->$right_set_methodname($left_item);								}								else								{									$msg="Error : Unknown `".$middle_item_classname."->".$right_set_methodname."` method.";									Viewer::error_msg($msg);								}																/**								 * Linking : Left -> 0..* Right								 */								// $add_method_prefixe = 'add_';								$left_add_methodname=self::$add_method_prefixe.strtolower($right_item_classname).$right_suffixe;								if(method_exists($left_item,$left_add_methodname))								{									$left_item->$left_add_methodname($right_item);								}								else								{									$msg="Error : Unknown `".$left_item_classname."->".$left_add_methodname."` method.";									Viewer::error_msg($msg);								}																/**								 * Linking : Right -> 0..* Left								 */								$right_add_methodname=self::$add_method_prefixe.strtolower($left_item_classname).$left_suffixe;								if(method_exists($right_item,$right_add_methodname))								{									$right_item->$right_add_methodname($left_item);								}								else								{									$msg="Error : Unknown `".$right_item_classname."->".$right_add_methodname."` method.";									Viewer::error_msg($msg);								}							}							else							{								$msg="Error : Foreign Key constraint violation : Foreign Key from `".$middle_item_classname."` referencing to `".$right_item_classname."` is null.";								Viewer::error_msg($msg);							}						}						else						{							$msg="Error : Unknown `".$middle_item_classname."->".$right_get_id_methodname."` method.";							Viewer::error_msg($msg);						}					}					else					{						$msg="Error : Foreign Key constraint violation : Foreign Key from `".$middle_item_classname."` referencing to `".$left_item_classname."` is null.";						Viewer::error_msg($msg);					}				}				else				{					$msg="Error : Unknown `".$middle_item_classname."->".$left_get_id_methodname."` method.";					Viewer::error_msg($msg);				}			}		}				public static function link_any_to_any(&$left_items, &$middle_items, &$right_items, $left_suffixe="", $right_suffixe="")		{			/**			 * Linking : Left 0..* -- Middle --> 0..* Right			 */			 			foreach($middle_items as $middle_item)			{				$middle_item_classname = get_class($middle_item);				$left_items_array = array_values($left_items);				$first_left_item = array_shift($left_items_array);				$left_item_classname = get_class($first_left_item);				$right_items_array = array_values($right_items);				$first_right_item = array_shift($right_items_array);				$right_item_classname = get_class($first_right_item);								// $get_id_method_prefixe = 'get_id_';								$left_get_id_methodname=self::$get_id_method_prefixe.strtolower($left_item_classname);				$right_get_id_methodname=self::$get_id_method_prefixe.strtolower($right_item_classname);								if(method_exists($middle_item,$left_get_id_methodname))				{					$left_id_value = $middle_item->$left_get_id_methodname();					if(! is_null($left_id_value))					{						if(method_exists($middle_item,$right_get_id_methodname))						{							$right_id_value = $middle_item->$right_get_id_methodname();							if(! is_null($right_id_value))							{								$left_item = $left_items[$left_id_value];								$right_item = $right_items[$right_id_value];																/**								 * Linking : Middle -> 1 Left								 */								// $set_method_prefixe = 'set_';								$left_set_methodname=self::$set_method_prefixe.strtolower($left_item_classname);								if(method_exists($middle_item,$left_set_methodname))								{									$middle_item->$left_set_methodname($left_item);								}								else								{									$msg="Error : Unknown `".$middle_item_classname."->".$left_set_methodname."` method.";									Viewer::error_msg($msg);								}																/**								 * Linking : Middle -> 1 Right								 */								$right_set_methodname=self::$set_method_prefixe.strtolower($right_item_classname);								if(method_exists($middle_item,$right_set_methodname))								{									$middle_item->$right_set_methodname($left_item);								}								else								{									$msg="Error : Unknown `".$middle_item_classname."->".$right_set_methodname."` method.";									Viewer::error_msg($msg);								}																/**								 * Linking : Left -> 0..* Right								 */								// $add_method_prefixe = 'add_';								$left_add_methodname=self::$add_method_prefixe.strtolower($right_item_classname).$right_suffixe;								if(method_exists($left_item,$left_add_methodname))								{									$left_item->$left_add_methodname($right_item);								}								else								{									$msg="Error : Unknown `".$left_item_classname."->".$left_add_methodname."` method.";									Viewer::error_msg($msg);								}							}							else							{								$msg="Error : Foreign Key constraint violation : Foreign Key from `".$middle_item_classname."` referencing to `".$right_item_classname."` is null.";								Viewer::error_msg($msg);							}						}						else						{							$msg="Error : Unknown `".$middle_item_classname."->".$right_get_id_methodname."` method.";							Viewer::error_msg($msg);						}					}					else					{						$msg="Error : Foreign Key constraint violation : Foreign Key from `".$middle_item_classname."` referencing to `".$left_item_classname."` is null.";						Viewer::error_msg($msg);					}				}				else				{					$msg="Error : Unknown `".$middle_item_classname."->".$left_get_id_methodname."` method.";					Viewer::error_msg($msg);				}			}		}				/**		 * Add item in list		 * @param object		 */		public function add_item($item, $list)		{			$this->$list[$item->get_id()] = $item;		}				/**		 * Add all items in list		 * @param object		 */		public function add_all_items($items, $list)		{			foreach($items as $item)			{				$this->$list[$item->get_id()] = $item;			}		}				/**		 * Remove item from list		 * @param int id		 */		public function remove_item($item, $list)		{			unset($this->$list[$item->get_id()]);		}				/**		 * Get item from list		 * @param int id		 */		public function get_item($id,$list)		{			return $this->$list[$id];		}				/**		 * Get all items from list		 * @param int id		 */		public function get_all_items($list)		{			return $this->$list;		}				/**		 * List contains item		 * @param int id		 */		public function isset_item($item,$list)		{			return isset($this->$list[$item->get_id()]);		}				/**		 * List is empty		 * @param int id		 */		public function empty_list($list)		{			return empty($this->$list);		}				/**		 * Count items from list		 * @param int id		 */		public function count_list($list)		{			return count($this->$list);		}	}?>